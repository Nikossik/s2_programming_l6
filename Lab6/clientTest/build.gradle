plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id "java"
    id 'java-library'
    id 'application'
    id("com.github.johnrengelman.shadow") version "8.1.0"
    id 'io.freefair.lombok' version '6.5.1'
}

repositories {
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2')
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    implementation('jakarta.xml.bind:jakarta.xml.bind-api:4.0.1')
    implementation('org.glassfish.jaxb:jaxb-runtime:4.0.4')
    implementation('jakarta.activation:jakarta.activation-api:2.1.3')

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

tasks.register('testing') {
    doLast {
        println 'Running tests...'
    }
}
tasks.register('application') {
    // Define the main class for the application.
    mainClassName = 'ru.itmo.lab5.system.Main'
}

run {
    main = 'ru.itmo.lab5.system.Main'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    environment 'Lab', 'data/file.xml'
}
shadowJar {

    setMainClassName('ru.itmo.lab5.system.Main')
    archiveBaseName.set('Jar/Lab6')
    configurations = [project.configurations.compileClasspath]
    manifest {
        attributes 'Main-Class': 'ru.itmo.lab5.system.Main'
    }
}
tasks.register('ShadowJar') {
    setMainClassName('ru.itmo.lab5.system.Main')
}

